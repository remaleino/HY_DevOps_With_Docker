version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: reverse_webserver
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      - back-end
      - front-end
    networks:
      - app-network

  db:
    image: postgres:13.2-alpine
    container_name: db_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    volumes:
      - ./docker/postgres/datadir:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - app-network

  redis-server:
    image: redis:alpine
    container_name: redis
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - ./docker/redis/dir:/data
    ports:
      - 6379:6379
    networks:
      - app-network

  back-end:
    image: example-backend
    build: ./example-backend
    command: ./server
    container_name: back-end
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis-server
      - POSTGRES_HOST=db
      - POSTGRES_DATABASE=postgres
      - REQUEST_ORIGIN=http://localhost
    depends_on:
      - redis-server
      - db
    networks:
      - app-network

  front-end:
    image: example-frontend
    build: ./example-frontend
    container_name: front-end
    command: serve -s -l 5000 build
    environment:
      - REACT_APP_BACKEND_URL=http://localhost/api/
    networks:
      - app-network

networks:
  app-network: